:root {
  /* --------------------------------------------------
     ! Z-Index Variables
     ----------------------------------------------
     * Use Case: Control the stacking order of elements.
     * Higher values place elements above lower ones.
  -------------------------------------------------- */
  --z-1: 1; /* Utility Classes: N/A */
  --z-2: 2; /* Utility Classes: N/A */
  --z-3: 3; /* Utility Classes: N/A */
  --z-4: 4; /* Utility Classes: N/A */
  --z-5: 5; /* Utility Classes: N/A */

  /* --------------------------------------------------
     ! Spacing Variables
     ----------------------------------------------
     * Use Case: Define consistent spacing for margins, padding, and gaps across the project.
     * Utilizes the `clamp` function for responsive spacing.
  -------------------------------------------------- */
  --spacing-xs: clamp(0.25rem, 0.127rem + 0.41vw, 0.5rem); /* 4px to 8px */
  /* Utility Classes: .m-xs, .p-xs, .mtop-xs, .mbottom-xs, .mleft-xs, .mright-xs, .mblock-xs, .minline-xs, .ptop-xs, .pbottom-xs, .pleft-xs, .pright-xs, .pblock-xs, .pinline-xs */

  --spacing-sm: clamp(0.5rem, 0.377rem + 0.41vw, 0.75rem); /* 8px to 12px */
  /* Utility Classes: .m-sm, .p-sm, .mtop-sm, .mbottom-sm, .mleft-sm, .mright-sm, .mblock-sm, .minline-sm, .ptop-sm, .pbottom-sm, .pleft-sm, .pright-sm, .pblock-sm, .pinline-sm */

  --spacing-md: clamp(0.75rem, 0.627rem + 0.41vw, 1rem); /* 12px to 16px */
  /* Utility Classes: .m-md, .p-md, .mtop-md, .mbottom-md, .mleft-md, .mright-md, .mblock-md, .minline-md, .ptop-md, .pbottom-md, .pleft-md, .pright-md, .pblock-md, .pinline-md */

  --spacing-base: clamp(1rem, 0.877rem + 0.41vw, 1.25rem); /* 16px to 24px */
  /* Utility Classes: .m-base, .p-base, .mtop-base, .mbottom-base, .mleft-base, .mright-base, .mblock-base, .minline-base, .ptop-base, .pbottom-base, .pleft-base, .pright-base, .pblock-base, .pinline-base */

  --spacing-lg: clamp(1.25rem, 0.942rem + 1.04vw, 1.875rem); /* 20px to 30px */
  /* Utility Classes: .m-lg, .p-lg, .mtop-lg, .mbottom-lg, .mleft-lg, .mright-lg, .mblock-lg, .minline-lg, .ptop-lg, .pbottom-lg, .pleft-lg, .pright-lg, .pblock-lg, .pinline-lg */

  --spacing-xl: clamp(2rem, 1.508rem + 1.66vw, 3rem); /* 32px to 48px */
  /* Utility Classes: .m-xl, .p-xl, .mtop-xl, .mbottom-xl, .mleft-xl, .mright-xl, .mblock-xl, .minline-xl, .ptop-xl, .pbottom-xl, .pleft-xl, .pright-xl, .pblock-xl, .pinline-xl */

  --spacing-2xl: clamp(3.125rem, 2.202rem + 3.11vw, 5rem); /* 50px to 80px */

  /* Utility Classes: .m-2xl, .p-2xl, .mtop-2xl, .mbottom-2xl, .mleft-2xl, .mright-2xl, .mblock-2xl, .minline-2xl, .ptop-2xl, .pbottom-2xl, .pleft-2xl, .pright-2xl, .pblock-2xl, .pinline-2xl */

  --spacing-3xl: clamp(4rem, 3.016rem + 3.32vw, 6rem); /* 64px to 96px */
  /* Utility Classes: .m-3xl, .p-3xl, .mtop-3xl, .mbottom-3xl, .mleft-3xl, .mright-3xl, .mblock-3xl, .minline-3xl, .ptop-3xl, .pbottom-3xl, .pleft-3xl, .pright-3xl, .pblock-3xl, .pinline-3xl */

  --spacing-4xl: clamp(6rem, 5.016rem + 3.32vw, 8rem); /* 96px to 128px */
  /* Utility Classes: .m-4xl, .p-4xl, .mtop-4xl, .mbottom-4xl, .mleft-4xl, .mright-4xl, .mblock-4xl, .minline-4xl, .ptop-4xl, .pbottom-4xl, .pleft-4xl, .pright-4xl, .pblock-4xl, .pinline-4xl */

  --spacing-5xl: clamp(8rem, 6.031rem + 6.63vw, 12rem); /* 128px to 192px */
  /* Utility Classes: .m-5xl, .p-5xl, .mtop-5xl, .mbottom-5xl, .mleft-5xl, .mright-5xl, .mblock-5xl, .minline-5xl, .ptop-5xl, .pbottom-5xl, .pleft-5xl, .pright-5xl, .pblock-5xl, .pinline-5xl */

  --spacing-6xl: clamp(12rem, 10.031rem + 6.63vw, 16rem); /* 192px to 256px */
  /* Utility Classes: .m-6xl, .p-6xl, .mtop-6xl, .mbottom-6xl, .mleft-6xl, .mright-6xl, .mblock-6xl, .minline-6xl, .ptop-6xl, .pbottom-6xl, .pleft-6xl, .pright-6xl, .pblock-6xl, .pinline-6xl */

  --spacing-7xl: clamp(16rem, 12.062rem + 13.26vw, 24rem); /* 256px to 384px */
  /* Utility Classes: .m-7xl, .p-7xl, .mtop-7xl, .mbottom-7xl, .mleft-7xl, .mright-7xl, .mblock-7xl, .minline-7xl, .ptop-7xl, .pbottom-7xl, .pleft-7xl, .pright-7xl, .pblock-7xl, .pinline-7xl */

  --spacing-8xl: clamp(24rem, 20.062rem + 13.26vw, 32rem); /* 384px to 512px */
  /* Utility Classes: .m-8xl, .p-8xl, .mtop-8xl, .mbottom-8xl, .mleft-8xl, .mright-8xl, .mblock-8xl, .minline-8xl, .ptop-8xl, .pbottom-8xl, .pleft-8xl, .pright-8xl, .pblock-8xl, .pinline-8xl */

  --spacing-9xl: clamp(32rem, 28.062rem + 13.26vw, 40rem); /* 512px to 640px */
  /* Utility Classes: .m-9xl, .p-9xl, .mtop-9xl, .mbottom-9xl, .mleft-9xl, .mright-9xl, .mblock-9xl, .minline-9xl, .ptop-9xl, .pbottom-9xl, .pleft-9xl, .pright-9xl, .pblock-9xl, .pinline-9xl */

  --spacing-10xl: clamp(40rem, 36.062rem + 13.26vw, 48rem); /* 640px to 768px */
  /* Utility Classes: .m-10xl, .p-10xl, .mtop-10xl, .mbottom-10xl, .mleft-10xl, .mright-10xl, .mblock-10xl, .minline-10xl, .ptop-10xl, .pbottom-10xl, .pleft-10xl, .pright-10xl, .pblock-10xl, .pinline-10xl */

  --spacing-11xl: clamp(48rem, 46.031rem + 6.63vw, 52rem); /* 768px to 832px */
  /* Utility Classes: .m-11xl, .p-11xl, .mtop-11xl, .mbottom-11xl, .mleft-11xl, .mright-11xl, .mblock-11xl, .minline-11xl, .ptop-11xl, .pbottom-11xl, .pleft-11xl, .pright-11xl, .pblock-11xl, .pinline-11xl */

  /* --------------------------------------------------
     ! Font Size Variables
     ----------------------------------------------
     * Use Case: Define responsive font sizes for typography.
     * The `clamp` function ensures font sizes scale between defined minimum and maximum viewport widths.
     * Range: Minimum viewport width of 475px to a maximum of 1200px.
  -------------------------------------------------- */
  --fsz-3xs: 1rem; /* 16px */
  /* Utility Classes: .fsz-3xs */

  --fsz-2xs: 1.125rem; /* 18px */
  /* Utility Classes: .fsz-2xs */

  --fsz-xs: 1.25rem; /* 20px */
  /* Utility Classes: .fsz-xs */

  --fsz-sm: 1.375rem; /* 22px */
  /* Utility Classes: .fsz-sm */

  --fsz-md: 1.5rem; /* 24px */
  /* Utility Classes: .fsz-md */

  --fsz-lg: 1.875rem; /* 30px */
  /* Utility Classes: .fsz-lg */

  --fsz-xl: clamp(2.5rem, 33.456px + 1.38vw, 3.125rem); /* 40px to 50px */
  /* Utility Classes: .fsz-xl */

  --fsz-2xl: clamp(2.5rem, 0.453rem + 6.9vw, 5.625rem); /* 40px to 90px */
  /* Utility Classes: .fsz-2xl */

  --fsz-3xl: clamp(2.5rem, -0.366rem + 9.66vw, 6.875rem); /* 40px to 110px */
  /* Utility Classes: .fsz-3xl */

  --fsz-4xl: clamp(3.125rem, -2.198rem + 17.93vw, 11.25rem); /* 50px to 180px */
  /* Utility Classes: .fsz-4xl */

  /* --------------------------------------------------
     ! Line-Height Variables
     ----------------------------------------------
     * Use Case: Define standardized line heights for typography.
  -------------------------------------------------- */
  --lh-4xs: 0.63; /* 0.63 * 16px = 10.08px */
  /* Utility Classes: .lh-4xs */

  --lh-3xs: 1; /* 1 * 16px = 16px */
  /* Utility Classes: .lh-3xs */

  --lh-2xs: 1.13; /* 1.13 * 16px = 18.08px */
  /* Utility Classes: .lh-2xs */

  --lh-xs: 1.25; /* 1.25 * 16px = 20px */
  /* Utility Classes: .lh-xs */

  --lh-sm: 1.38; /* 1.38 * 16px = 22.08px */
  /* Utility Classes: .lh-sm */

  --lh-md: 1.5; /* 1.5 * 16px = 24px */
  /* Utility Classes: .lh-md */

  --lh-lg: 1.625; /* 1.625 * 16px = 26px */
  /* Utility Classes: .lh-lg */

  --lh-xl: 1.75; /* 1.75 * 16px = 28px */
  /* Utility Classes: .lh-xl */

  --lh-2xl: 1.875; /* 1.875 * 16px = 30px */
  /* Utility Classes: .lh-2xl */

  --lh-3xl: 2; /* 2 * 16px = 32px */
  /* Utility Classes: .lh-3xl */

  --lh-4xl: 2.5; /* 2.5 * 16px = 40px */
  /* Utility Classes: .lh-4xl */

  --lh-5xl: 2.81; /* 2.81 * 16px = 44.96px */
  /* Utility Classes: .lh-5xl */

  --lh-6xl: 3.31; /* 3.31 * 16px = 52.96px */
  /* Utility Classes: .lh-6xl */

  /* --------------------------------------------------
     ! Font Weight Variables
     ----------------------------------------------
     * Use Case: Define standardized font weights for typography.
  -------------------------------------------------- */
  --fw-thin: 100;
  /* Utility Classes: .fw-thin */

  --fw-extralight: 200;
  /* Utility Classes: N/A */

  --fw-light: 300;
  /* Utility Classes: .fw-light */

  --fw-regular: 400;
  /* Utility Classes: .fw-regular */

  --fw-medium: 500;
  /* Utility Classes: .fw-medium */

  --fw-semibold: 600;
  /* Utility Classes: N/A */

  --fw-bold: 700;
  /* Utility Classes: .fw-bold */

  --fw-extrabold: 800;
  /* Utility Classes: N/A */

  --fw-black: 900;
  /* Utility Classes: .fw-black */

  /* --------------------------------------------------
     ! Breakpoints for Media Queries
     ----------------------------------------------
     * Use Case: Define breakpoints for responsive designs using media queries.
  -------------------------------------------------- */
  --mq-breakpoint-md: 30rem; /* 480px */
  /* Utility Classes: N/A */

  --mq-breakpoint-lg: 80rem; /* 1280px */
  /* Utility Classes: N/A */

  /* --------------------------------------------------
     ! Breakpoints for Container Queries
     ----------------------------------------------
     * Use Case: Define breakpoints for container-based designs.
  -------------------------------------------------- */
  --cq-breakpoint-sm: 29.6875rem; /* 475px */
  /* Utility Classes: N/A */

  --cq-breakpoint-md: 48rem; /* 768px */
  /* Utility Classes: N/A */

  --cq-breakpoint-lg: 64rem; /* 1024px */
  /* Utility Classes: N/A */

  /* --------------------------------------------------
     ! Maximum Width Variables
     ----------------------------------------------
     * Use Case: Define maximum widths for containers to constrain content.
  -------------------------------------------------- */
  --max-width-1440px: 90rem; /* 1440px */
  /* Utility Classes: N/A */

  /* --------------------------------------------------
     ! Border Radius Variables
     ----------------------------------------------
     * Use Case: Define standardized border radii for elements.
  -------------------------------------------------- */
  --border-radius: 0.75rem; /* 12px */
  /* Utility Classes: .br */

  --rounded-border-radius: 5.625rem; /* 90px */
  /* Utility Classes: .br-rounded */

  /* --------------------------------------------------
     ! Base Color Variables
     ----------------------------------------------
     * Use Case: Define base colors used throughout the project.
  -------------------------------------------------- */
  --color-white: hsl(0, 0%, 100%); /* #ffffff */
  /* Utility Classes: .text-white, .bg-white */

  --color-white-100: hsl(0, 0%, 98%); /* #fafafa */
  /* Utility Classes: .bg-white-100 */

  --color-white-200: hsl(240, 11%, 96%); /* #f5f5f7 */
  /* Utility Classes: .bg-white-200 */

  --color-white-300: hsl(240, 5%, 92%); /* #eaeaec */
  /* Utility Classes: .border-white */

  --color-black: hsl(0, 0%, 0%); /* #000000 */
  /* Utility Classes: .text-black, .bg-black */

  --color-black-0: hsla(0, 0%, 0%, 0.07); /* #00000012 */
  /* Utility Classes: .bg-black-0 */

  --color-black-100: hsla(0, 0%, 0%, 0.16); /* #00000029 */
  /* Utility Classes: .bg-black-100 */

  --color-black-200: hsl(240, 3%, 12%); /* #1d1d1f */
  /* Utility Classes: .bg-black-200, .text-800, .border-black */

  --color-black-300: hsla(0, 0%, 15%, 0.16); /* #26262629 */
  /* Utility Classes: .bg-black-300 */

  --color-black-400: hsl(0, 0%, 18%); /* #2e2e2e */
  /* Utility Classes: .bg-black-400, .border-black-400 */

  --color-black-500: hsl(240, 3%, 21%); /* #333336 */
  /* Utility Classes: .bg-black-500 */

  /* --------------------------------------------------
     ! Text Color Variables
     ----------------------------------------------
     * Use Case: Define text colors for various UI elements.
  -------------------------------------------------- */
  --text-white: var(--color-white); /* #ffffff */
  /* Utility Classes: .text-white */

  --text-black-500: #383838; /* #383838 */
  /* Utility Classes: .text-black */

  --text-black-600: hsl(0, 0%, 32%); /* #525252 */
  /* Utility Classes: N/A (Could be .text-600) */

  --text-black-700: hsla(240, 3%, 12%, 0.702); /* #1d1d1fb3 */
  /* Utility Classes: N/A (Could be .text-700) */

  --text-black-800: var(--color-black-200); /* #1d1d1f */
  /* Utility Classes: .text-black-800 */

  --text-black-900: hsla(0, 0%, 0%, 0.6); /* #00000099 */
  /* Utility Classes: N/A (Could be .text-900) */

  --text-black: var(--text-black-500); /* #383838 */
  /* Utility Classes: .text-black */

  /* --------------------------------------------------
     ! Border Color Variables
     ----------------------------------------------
     * Use Case: Define border colors for various UI elements.
  -------------------------------------------------- */
  --border-white: var(--color-white-300); /* #eaeaec */
  /* Utility Classes: .border-white */

  --border-black: var(--color-black-200); /* #1d1d1f */
  /* Utility Classes: .border-black */

  --border-black-100: hsla(0, 0%, 0%, 0.04); /* #0000000a */
  /* Utility Classes: .border-black-100 */

  --border-black-200: hsla(0, 0%, 0%, 0.078); /* #00000014 */
  /* Utility Classes: .border-black-200 */

  --border-black-300: hsla(0, 0%, 0%, 0.071); /* #00000012 */
  /* Utility Classes: .border-black-300 */

  --border-black-400: var(--color-black-400); /* #2e2e2e */
  /* Utility Classes: .border-black-400 */

  /* --------------------------------------------------
     ! Fill Color Variables
     ----------------------------------------------
     * Use Case: Define fill colors for icons and other filled elements.
  -------------------------------------------------- */
  --fill-800: var(--text-black-600); /* #525252 */
  /* Utility Classes: N/A */

  --fill-900: var(--color-black-200); /* #1d1d1f */
  /* Utility Classes: N/A */

  /* --------------------------------------------------
     ! Red Color Scale
     ----------------------------------------------
     * Use Case: Define various shades of red for alerts, errors, and highlights.
  -------------------------------------------------- */
  --color-red-100: hsl(0, 100%, 95%); /* Very light red */
  /* Utility Classes: .text-red-100, .bg-red-100 */

  --color-red-200: hsl(0, 100%, 85%); /* Light red */
  /* Utility Classes: .text-red-200, .bg-red-200 */

  --color-red-300: hsl(0, 100%, 74%); /* Slightly lighter red */
  /* Utility Classes: .text-red-300, .bg-red-300 */

  --color-red-base: hsl(0, 100%, 63%); /* Base red */
  /* Utility Classes: .text-red-base, .bg-red-base */

  --color-red-500: hsl(0, 100%, 53%); /* Slightly darker red */
  /* Utility Classes: .text-red-500, .bg-red-500 */

  --color-red-600: hsl(0, 100%, 43%); /* Dark red */
  /* Utility Classes: .text-red-600, .bg-red-600 */

  --color-red-700: hsl(0, 100%, 33%); /* Darker red */
  /* Utility Classes: .text-red-700, .bg-red-700 */

  --color-red-800: hsl(0, 100%, 23%); /* Very dark red */
  /* Utility Classes: .text-red-800, .bg-red-800 */

  --color-red-900: hsl(0, 100%, 13%); /* Darkest red */
  /* Utility Classes: .text-red-900, .bg-red-900 */

  /* --------------------------------------------------
     ! Font Family Variables
     ----------------------------------------------
     * Use Case: Define font families for various text elements.
  -------------------------------------------------- */
  --ff-regular: "Inter Tight", system-ui; /* Regular font family */
  /* Utility Classes: .ff-regular */

  --ff-bold: "Instrument Sans", system-ui; /* Bold font family */
  /* Utility Classes: .ff-bold */

  /* --------------------------------------------------
     ! Background Shadow Variables
     ----------------------------------------------
     * Use Case: Define standardized shadow effects for UI elements.
     * Shadows are layered to create depth and elevation.
  -------------------------------------------------- */
  --shadow-color: 0deg 0% 63%; /* Base color for shadows */
  /* Utility Classes: N/A */

  --shadow-sm: 0.0187rem 0.0313rem 0.0313rem hsl(var(--shadow-color) / 0.52),
    0.025rem 0.05rem 0.05rem -0.1187rem hsl(var(--shadow-color) / 0.4),
    0.0625rem 0.125rem 0.1313rem -0.2313rem hsl(var(--shadow-color) / 0.29);
  /* Utility Classes: .shadow-sm */

  --shadow-md: 0.0187rem 0.0313rem 0.0313rem hsl(var(--shadow-color) / 0.43),
    0.0313rem 0.0625rem 0.0625rem -0.0563rem hsl(var(--shadow-color) / 0.38),
    0.0688rem 0.1313rem 0.1375rem -0.1187rem hsl(var(--shadow-color) / 0.32),
    0.15rem 0.3rem 0.3125rem -0.175rem hsl(var(--shadow-color) / 0.26),
    0.3125rem 0.625rem 0.6563rem -0.2313rem hsl(var(--shadow-color) / 0.2);
  /* Utility Classes: .shadow-md */

  --shadow-lg: 0.0187rem 0.0313rem 0.0313rem hsl(var(--shadow-color) / 0.4),
    0.0437rem 0.0938rem 0.1rem -0.025rem hsl(var(--shadow-color) / 0.38),
    0.0813rem 0.1625rem 0.1688rem -0.05rem hsl(var(--shadow-color) / 0.35),
    0.1375rem 0.275rem 0.2875rem -0.075rem hsl(var(--shadow-color) / 0.32),
    0.225rem 0.4437rem 0.4688rem -0.1062rem hsl(var(--shadow-color) / 0.29),
    0.35rem 0.7063rem 0.7375rem -0.1313rem hsl(var(--shadow-color) / 0.27),
    0.5375rem 1.075rem 1.125rem -0.1563rem hsl(var(--shadow-color) / 0.24),
    0.7937rem 1.5875rem 1.6625rem -0.1812rem hsl(var(--shadow-color) / 0.21),
    1.1313rem 2.2625rem 2.3687rem -0.2062rem hsl(var(--shadow-color) / 0.19),
    1.5625rem 3.125rem 3.275rem -0.2313rem hsl(var(--shadow-color) / 0.16);
  /* Utility Classes: .shadow-lg */
}

/* --------------------------------------------------
        !GLOBAL BOX-SIZING
        ----------------------------------------------
        *Apply a consistent box-sizing model to all elements and pseudo-elements.
        *This ensures that padding and borders are included in the element's total width and height.
    -------------------------------------------------- */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Font Smoothing */
/* Uncomment the following lines for better font rendering across browsers */
/* -webkit-font-smoothing: antialiased; */
/* -moz-osx-font-smoothing: grayscale; */

/* --------------------------------------------------
      TEXT OVERFLOW PREVENTION
      ----------------------------------------------
      Ensure that text within paragraphs and headings wraps appropriately to prevent overflow.
    -------------------------------------------------- */
p,
h1,
h2,
h3,
h4,
h5,
h6 {
  overflow-wrap: break-word;
}

p {
  text-wrap: pretty; /* Custom text wrapping for paragraphs */
}

/* --------------------------------------------------
      SMALL TEXT STYLING
      ----------------------------------------------
      Define styles for small text elements.
    -------------------------------------------------- */
small {
  text-transform: uppercase; /* Convert text to uppercase */
  color: red; /* Set text color to red */
  font-weight: var(--fw-regular); /* Apply regular font weight */
  font-size: var(--fsz-2xs); /* Set font size to 18px */
}

/* --------------------------------------------------
      HTML AND BODY STYLES
      ----------------------------------------------
      Set base styles for the html and body elements.
    -------------------------------------------------- */
html,
body {
  width: 100%;
  height: 100%;
  scroll-behavior: smooth; /* Enable smooth scrolling */
  text-rendering: optimizeSpeed; /* Optimize text rendering for speed */
  overflow-x: hidden; /* Prevent horizontal overflow */
}

/* --------------------------------------------------
      MEDIA ELEMENTS STYLING
      ----------------------------------------------
      Ensure media elements are responsive and scale correctly.
    -------------------------------------------------- */
img,
picture,
video,
canvas,
svg {
  display: block;
  max-width: 100%; /* Prevent media from exceeding container width */
  height: auto; /* Maintain aspect ratio */
}

/* --------------------------------------------------
      LIST STYLING RESET
      ----------------------------------------------
      Remove default list styles for ordered and unordered lists.
    -------------------------------------------------- */
ol,
ul {
  list-style: none;
}

/* --------------------------------------------------
      INTERACTIVE ELEMENTS CURSOR
      ----------------------------------------------
      Set the cursor to pointer for buttons and other interactive elements to indicate clickability.
    -------------------------------------------------- */
button,
[role="button"],
select {
  cursor: pointer;
}

/* --------------------------------------------------
      FORM ELEMENTS FONT INHERITANCE
      ----------------------------------------------
      Ensure form elements inherit the font styles from their parent elements.
    -------------------------------------------------- */
input,
button,
textarea,
select {
  font: inherit;
}

/* --------------------------------------------------
      TABLE STYLES RESET
      ----------------------------------------------
      Remove default table styles for a clean slate.
    -------------------------------------------------- */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

/* --------------------------------------------------
      QUOTE STYLES RESET
      ----------------------------------------------
      Remove default quotes from blockquote and q elements.
    -------------------------------------------------- */
blockquote,
q {
  quotes: none;
}

blockquote::before,
blockquote::after,
q::before,
q::after {
  content: "";
}

/* --------------------------------------------------
      HYPHENATION FOR TEXT OVERFLOW
      ----------------------------------------------
      Enable hyphenation to improve text flow and prevent overflow issues.
    -------------------------------------------------- */
* {
  hyphens: auto;
}

/* --------------------------------------------------
      FONT FACE DEFINITIONS
      ----------------------------------------------
      Define custom font faces for the project.
    -------------------------------------------------- */
@font-face {
  font-family: "Instrument Sans";
  src: url("../src/lib/fonts/InstrumentSans-VariableFont.ttf")
    format("truetype-variations");
  font-weight: 100 900; /* Supports weights from 100 to 900 */
}

@font-face {
  font-family: "Inter Tight";
  src: url("../src/lib/fonts/InterTight-VariableFont.ttf")
    format("truetype-variations");
  font-weight: 100 900; /* Supports weights from 100 to 900 */
}

/* --------------------------------------------------
      GLOBAL MARGIN, PADDING, AND BORDER RESET
      ----------------------------------------------
      Remove default margins, paddings, and borders from a wide range of HTML elements.
      This creates a consistent baseline for styling.
    -------------------------------------------------- */
html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
small,
strong,
sub,
sup,
tt,
var,
b,
u,
i,
center,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
embed,
figure,
figcaption,
footer,
header,
hgroup,
menu,
nav,
output,
ruby,
section,
summary,
time,
mark,
audio,
video {
  margin: 0; /* Remove default margin */
  padding: 0; /* Remove default padding */
  border: 0; /* Remove default border */
  vertical-align: baseline; /* Set vertical alignment to baseline */
}

/* --------------------------------------------------
      SCROLLBAR STYLES
      ----------------------------------------------
      Customize the appearance of scrollbars for a more consistent look across browsers.
    -------------------------------------------------- */

/* Scrollbar Track */
::-webkit-scrollbar {
  width: 0.5rem; /* Set scrollbar width */
}

/* Scrollbar Track Background */
::-webkit-scrollbar-track {
  background: hsl(0, 0%, 100%); /* White background for the scrollbar track */
}

/* Scrollbar Thumb */
::-webkit-scrollbar-thumb {
  background-color: hsl(0, 0%, 53%); /* Gray color for the scrollbar thumb */
  border-radius: 0.625rem; /* Rounded corners for the scrollbar thumb */
  border: 0.125rem solid hsl(0, 0%, 100%); /* White border around the scrollbar thumb */
}

/* Scrollbar Thumb Hover Effect */
::-webkit-scrollbar-thumb:hover {
  background-color: hsl(0, 0%, 33%); /* Darker gray on hover */
}

/* Scrollbar Buttons (Optional) */
::-webkit-scrollbar-button {
  display: none; /* Hide scrollbar buttons */
}
