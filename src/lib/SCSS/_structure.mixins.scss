/*===================================================
     Mixins:
     Note: Mixins are reusable blocks of code that can be used to apply styles to elements.

     however they are different than global classes. Global classes are written once and compiled once.

     - think that mixins are a type of shorthand of a collection of properties. instead.
=================================================== */
@use "./_variables.scss" as *;
@use "./_functions.scss" as *;

/* ===============================================
                    Section Mixins
=============================================== */

@mixin section-heading-content-gap {
  gap: $section-heading-content-gap;
}
@mixin section-inner-gap {
  gap: $section-inner-gap; /*24 px*/
}

@mixin section-padding-inline {
  padding-inline: $section-padding-inline;
}

/*===================================================
     Structured Mixins
=================================================== */
@mixin flex($direction: row, $justify: center, $align: center) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
}

// Commonly used flex patterns as shortcuts
@mixin flex-center {
  @include flex();
}

@mixin flex-space-evenly {
  @include flex($justify: space-evenly);
}

@mixin flex-center-between {
  @include flex($justify: space-between);
}

@mixin flex-column-center {
  @include flex($direction: column);
}

@mixin flex-column-jus-center {
  @include flex($direction: column, $align: initial);
}

@mixin absolute-center {
  position: absolute;
  inset: 0;
  margin: auto;
}

@mixin pseudo-element {
  content: "";
  position: absolute;
  inset: 0;
  margin: auto;
}
