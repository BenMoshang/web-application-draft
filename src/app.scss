/* --------------------------------------------------
   Variables
-------------------------------------------------- */

/* Z-Index Variables */
$z-indexes: (
  z-1: 1,
  z-2: 2,
  z-3: 3,
  z-4: 4,
  z-5: 5,
);

/* Spacing */
$spacing-dynamic: (
  /* 8px to 12px */ 2xs: clamp(0.5rem, 0.4rem + 0.3vw, 0.75rem),
  /* 12px to 16px */ xs: clamp(0.75rem, 0.6rem + 0.4vw, 1rem),
  /* 16px to 24px */ sm: clamp(1rem, 0.8rem + 0.5vw, 1.5rem),
  /* 20px to 24px */ md: clamp(1.25rem, 1.157rem + 0.38vw, 1.5rem),
  /* 24px to 32px */ lg: clamp(1.5rem, 1.2rem + 0.6vw, 2rem),
  /* 30px to 40px */ xl: clamp(1.875rem, 1.716rem + 0.65vw, 2.5rem),
  /* 40px to 60px */ 2xl: clamp(2.5rem, 2.036rem + 1.9vw, 3.75rem),
  /* 50px to 80px */ 3xl: clamp(3.125rem, 2.257rem + 3.05vw, 5rem)
);

$spacing-static: (
  /* 4px */ 7xs: 0.25rem,
  /* 8px */ 6xs: 0.5rem,
  /* 10px */ 5xs: 0.625rem,
  /* 12px */ 4xs: 0.75rem,
  /* 16px */ 3xs: 1rem,
  /* 18px */ 2xs: 1.125rem,
  /* 20px */ xs: 1.25rem,
  /* 24px */ sm: 1.5rem,
  /* 28px */ md: 1.75rem,
  /* 30px */ lg: 1.875rem,
  /* 40px */ xl: 2.5rem
);

/* Font Sizes */
$font-sizes: (
  /* 16px */ 2xs: 1rem,
  /* 18px */ xs: map-get($spacing-static, 2xs),
  /* 20px */ sm: map-get($spacing-static, xs),
  /* 24px */ md: map-get($spacing-static, md),
  /* 24px to 30px */ lg: clamp(1.5rem, 1.315rem + 0.62vw, 1.875rem),
  /* 40px to 50px */ xl: clamp(2.5rem, 1.38rem + 2.75vw, 3.125rem),
  /* 40px to 90px */ 2xl: clamp(2.5rem, 0.453rem + 6.9vw, 5.625rem),
  /* 40px to 110px */ 3xl: clamp(2.5rem, -0.366rem + 9.66vw, 6.875rem),
  /* 50px to 180px */ 4xl: clamp(3.125rem, -2.198rem + 17.93vw, 11.25rem)
);

/* Line Heights */
$line-heights: (
  xs: 1.6,
  md: 1.5,
  lg: 1.2,
  xl: 1.1,
);

/* Letter Spacing */
$letter-spacing: (
  tight: -0.02em,
  normal: normal,
  loose: 0.02em,
);

/* Font Weights */
$font-weights: (
  thin: 100,
  extralight: 200,
  light: 300,
  regular: 400,
  medium: 500,
  semibold: 600,
  bold: 700,
  extrabold: 800,
  black: 900,
);

/* Border Radius */
$border-radii: (/* 12px */ default: 0.75rem, /* 90px */ rounded: 5.625rem);

/* Colors */
$colors: (
  white: #ffffff,
  black: #000000,
  gray: (
    // #fafafa
    lightest: hsl(0, 0%, 98%),
    // #eaeaea
    lighter: hsl(240, 11%, 96%),
    // #dcdcdc
    light: hsl(240, 5%, 92%),
    // #515151
    medium: hsl(0, 0%, 32%),
    // #363636
    dark: hsl(240, 3%, 21%),
    // #383838
    dark-alt: hsl(0, 0%, 22%),
    // #1f1f1f
    darker: hsl(240, 3%, 12%),
    // #262626
    darkest: hsl(0, 0%, 15%),
    text: hsl(240, 3%, 12%),
    // #1d1d1f
  ),
  gray-trans: (
    // #0000000a
    lightest: hsla(0, 0%, 0%, 0.04),
    //#00000012
    lighter: hsla(0, 0%, 0%, 0.07),
    // #00000029
    light: hsla(0, 0%, 0%, 0.16),
    // #242424b3
    medium: hsla(240, 3%, 12%, 0.7),
    // #2e2e2e
    medium-alt: hsl(0, 0%, 18%),
    // #00000099
    dark: hsla(0, 0%, 0%, 0.6),
    // #00000014
    darker: hsla(0, 0%, 0%, 0.078),
    // #00000012
    darkest: hsla(0, 0%, 0%, 0.071),
  ),
);

/* Text Colors */
$text-colors: (
  primary: map-get(map-get($colors, gray), text),
  secondary: map-get(map-get($colors, gray), dark),
  tertiary: map-get(map-get($colors, gray), medium),
  disabled: map-get(map-get($colors, gray-trans), dark),
  white: map-get($colors, white),
);

/* Background Colors */
$background-colors: (
  lightest: map-get(map-get($colors, gray), lightest),
  lighter: map-get(map-get($colors, gray), lighter),
  gray: map-get(map-get($colors, gray), dark-alt),
  dark: map-get(map-get($colors, gray-trans), light),
);

/* Border Colors */
$border-colors: (
  lightest: map-get(map-get($colors, gray), light),
  lighter: map-get(map-get($colors, gray-trans), light),
  medium: map-get(map-get($colors, gray), dark),
  dark: map-get(map-get($colors, gray), darker),
);

/* Font Families */
$font-families: (
  regular: "Inter Tight",
  bold: "Instrument Sans",
);

/* Shadows */
$shadow-color: 0deg 0% 63%;

// Extract the individual HSL values
$shadow-hue: nth($shadow-color, 1); // 0deg
$shadow-saturation: nth($shadow-color, 2); // 0%
$shadow-lightness: nth($shadow-color, 3); // 63%

$shadows: (
  sm: (
    0.0187rem 0.0313rem 0.0313rem
      hsl($shadow-hue, $shadow-saturation, $shadow-lightness / 0.52),
    0.025rem 0.05rem 0.05rem -0.1187rem hsl($shadow-hue, $shadow-saturation, $shadow-lightness /
          0.4),
    0.0625rem 0.125rem 0.1313rem -0.2313rem hsl($shadow-hue, $shadow-saturation, $shadow-lightness /
          0.29),
  ),
  md: (
    0.0187rem 0.0313rem 0.0313rem
      hsl($shadow-hue, $shadow-saturation, $shadow-lightness / 0.43),
    0.0313rem 0.0625rem 0.0625rem -0.0563rem hsl($shadow-hue, $shadow-saturation, $shadow-lightness /
          0.38),
    0.0688rem 0.1313rem 0.1375rem -0.1187rem hsl($shadow-hue, $shadow-saturation, $shadow-lightness /
          0.32),
    0.15rem 0.3rem 0.3125rem -0.175rem hsl($shadow-hue, $shadow-saturation, $shadow-lightness /
          0.26),
    0.3125rem 0.625rem 0.6563rem -0.2313rem hsl($shadow-hue, $shadow-saturation, $shadow-lightness /
          0.2),
  ),
  lg: (
    0.0187rem 0.0313rem 0.0313rem
      hsl($shadow-hue, $shadow-saturation, $shadow-lightness / 0.4),
    0.0437rem 0.0938rem 0.1rem -0.025rem hsl($shadow-hue, $shadow-saturation, $shadow-lightness /
          0.38),
    0.0813rem 0.1625rem 0.1688rem -0.05rem hsl($shadow-hue, $shadow-saturation, $shadow-lightness /
          0.35),
    0.1375rem 0.275rem 0.2875rem -0.075rem hsl($shadow-hue, $shadow-saturation, $shadow-lightness /
          0.32),
    0.225rem 0.4437rem 0.4688rem -0.1062rem hsl($shadow-hue, $shadow-saturation, $shadow-lightness /
          0.29),
    0.35rem 0.7063rem 0.7375rem -0.1313rem hsl($shadow-hue, $shadow-saturation, $shadow-lightness /
          0.27),
    0.5375rem 1.075rem 1.125rem -0.1563rem hsl($shadow-hue, $shadow-saturation, $shadow-lightness /
          0.24),
    0.7937rem 1.5875rem 1.6625rem -0.1812rem hsl($shadow-hue, $shadow-saturation, $shadow-lightness /
          0.21),
    1.1313rem 2.2625rem 2.3687rem -0.2062rem hsl($shadow-hue, $shadow-saturation, $shadow-lightness /
          0.19),
    1.5625rem 3.125rem 3.275rem -0.2313rem hsl($shadow-hue, $shadow-saturation, $shadow-lightness /
          0.16),
  ),
);

/* --------------------------------------------------
   Mixins
-------------------------------------------------- */
@mixin font-family($family-key) {
  font-family: map-get($font-families, $family-key);
}

@mixin font-size($size-key) {
  font-size: map-get($font-sizes, $size-key);
}

@mixin font-weight($weight-key) {
  font-weight: map-get($font-weights, $weight-key);
}

@mixin letter-spacing($spacing-key) {
  letter-spacing: map-get($letter-spacing, $spacing-key);
}

@mixin color($color-key) {
  color: map-get($text-colors, $color-key);
}

@mixin shadow($level) {
  box-shadow: map-get($shadows, $level);
}

@mixin reset {
  margin: 0;
  padding: 0;
  border: 0;
  vertical-align: baseline;
  box-sizing: border-box;
}

/* --------------------------------------------------
   Styles
-------------------------------------------------- */

/* GLOBAL BOX-SIZING */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* TEXT OVERFLOW PREVENTION */
p,
h1,
h2,
h3,
h4,
h5,
h6 {
  overflow-wrap: break-word;
}

p {
  text-wrap: pretty;
}

/* SMALL TEXT STYLING */
small {
  text-transform: uppercase;
  color: red;
  @include font-weight(regular);
  @include font-size(2xs);
}

/* HTML AND BODY STYLES */
html,
body {
  width: 100%;
  height: 100dvh;
  scroll-behavior: smooth;
  text-rendering: optimizeSpeed;
  overflow-x: hidden;
}

/* MEDIA ELEMENTS STYLING */
img,
picture,
video,
canvas,
svg {
  display: block;
  max-width: 100%;
  height: auto;
}

/* LIST STYLING RESET */
ol,
ul {
  list-style: none;
}

/* INTERACTIVE ELEMENTS CURSOR */
button,
[role="button"],
select {
  cursor: pointer;
}

/* FORM ELEMENTS FONT INHERITANCE */
input,
button,
textarea,
select {
  font: inherit;
}

/* TABLE STYLES RESET */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

/* QUOTE STYLES RESET */
blockquote,
q {
  quotes: none;

  &::before,
  &::after {
    content: "";
  }
}

/* HYPHENATION FOR TEXT OVERFLOW */
* {
  hyphens: auto;
}

/* FONT FACE DEFINITIONS */
@font-face {
  font-family: "Instrument Sans";
  src: url("../src/lib/fonts/InstrumentSans-VariableFont.ttf") format(".ttf");
  font-weight: 100 900;
}

@font-face {
  font-family: "Inter Tight";
  src: url("../src/lib/fonts/InterTight-VariableFont.ttf") format(".ttf");
  font-weight: 100 900;
}

/* GLOBAL MARGIN, PADDING, AND BORDER RESET */
html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
small,
strong,
sub,
sup,
tt,
var,
b,
u,
i,
center,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
embed,
figure,
figcaption,
footer,
header,
hgroup,
menu,
nav,
output,
ruby,
section,
summary,
time,
mark,
audio,
video {
  @include reset;
}

/* SCROLLBAR STYLES */
$scrollbar-width: 0.5rem;
$scrollbar-track-bg: hsl(0, 0%, 100%);
$scrollbar-thumb-bg: hsl(0, 0%, 53%);
$scrollbar-thumb-border-radius: 0.625rem;
$scrollbar-thumb-border-width: 0.125rem;
$scrollbar-thumb-hover-bg: hsl(0, 0%, 33%);

::-webkit-scrollbar {
  width: $scrollbar-width;
}

::-webkit-scrollbar-track {
  background: $scrollbar-track-bg;
}

::-webkit-scrollbar-thumb {
  background-color: $scrollbar-thumb-bg;
  border-radius: $scrollbar-thumb-border-radius;
  border: $scrollbar-thumb-border-width solid $scrollbar-track-bg;
}

::-webkit-scrollbar-thumb:hover {
  background-color: $scrollbar-thumb-hover-bg;
}

::-webkit-scrollbar-button {
  display: none;
}
